# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'
  
- task: SystemsManagerGetParameter@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    readMode: 'single'
    parameterName: 'frontBucket'
    singleNameTransform: 'custom'
    customVariableName: 'BUCKET_NAME'
  displayName: 'Gettin the bucket name'

- task: SystemsManagerGetParameter@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    readMode: 'single'
    parameterName: 'frontCloudfrontID'
    singleNameTransform: 'custom'
    customVariableName: 'DISTRIBUTION_ID'
  displayName: 'Gettin the CloudFront distribution ID'

- task: SystemsManagerGetParameter@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    readMode: 'single'
    parameterName: 'apigatewayURL'
    singleNameTransform: 'custom'
    customVariableName: 'APIGATEWAY_URL'
  displayName: 'Gettin the ApiGateway URL'

- task: SystemsManagerGetParameter@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    readMode: 'single'
    parameterName: 'imageCloudFrontURL'
    singleNameTransform: 'custom'
    customVariableName: 'IMAGE_BUCKET_URL'
  displayName: 'Gettin the Image Bucket CloudFront URL '

- task: SystemsManagerGetParameter@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    readMode: 'single'
    parameterName: 'cognitoURL'
    singleNameTransform: 'custom'
    customVariableName: 'COGNITO_URL'
  displayName: 'Gettin the Cognito URL'

- script: |
    cat <<EoF> ./.env.local
    NEXT_PUBLIC_API_URL=$(APIGATEWAY_URL)
    NEXT_PUBLIC_CLOUDFRONT_URL=$(IMAGE_BUCKET_URL)
    NEXT_PUBLIC_COGNITO_URL=$(COGNITO_URL)
  displayName: 'creating environment variables'

- script: |
    npm install 
    npm run build
  displayName: 'npm install and build'

- task: S3Upload@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    bucketName: '$(BUCKET_NAME)'
    sourceFolder: './out'
    globExpressions: '**'

- task: AWSCLI@1
  inputs:
    awsCredentials: 'aws'
    regionName: '$(REGION)'
    awsCommand: 'cloudfront'
    awsSubCommand: 'create-invalidation'
    awsArguments: '--distribution-id $(DISTRIBUTION_ID) --paths /*'